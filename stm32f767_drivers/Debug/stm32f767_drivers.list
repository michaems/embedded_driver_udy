
stm32f767_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001f8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000006e8  080001f8  080001f8  000101f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080008e0  080008e8  000108e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080008e0  080008e0  000108e8  2**0
                  CONTENTS
  4 .ARM          00000000  080008e0  080008e0  000108e8  2**0
                  CONTENTS
  5 .preinit_array 00000000  080008e0  080008e8  000108e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080008e0  080008e0  000108e0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080008e4  080008e4  000108e4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000108e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080008e8  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080008e8  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  000108e8  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000a4e  00000000  00000000  00010912  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000250  00000000  00000000  00011360  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000c8  00000000  00000000  000115b0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000a0  00000000  00000000  00011678  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001fa8  00000000  00000000  00011718  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000b63  00000000  00000000  000136c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00008228  00000000  00000000  00014223  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000049  00000000  00000000  0001c44b  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000288  00000000  00000000  0001c494  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001f8 <__do_global_dtors_aux>:
 80001f8:	b510      	push	{r4, lr}
 80001fa:	4c05      	ldr	r4, [pc, #20]	; (8000210 <__do_global_dtors_aux+0x18>)
 80001fc:	7823      	ldrb	r3, [r4, #0]
 80001fe:	b933      	cbnz	r3, 800020e <__do_global_dtors_aux+0x16>
 8000200:	4b04      	ldr	r3, [pc, #16]	; (8000214 <__do_global_dtors_aux+0x1c>)
 8000202:	b113      	cbz	r3, 800020a <__do_global_dtors_aux+0x12>
 8000204:	4804      	ldr	r0, [pc, #16]	; (8000218 <__do_global_dtors_aux+0x20>)
 8000206:	f3af 8000 	nop.w
 800020a:	2301      	movs	r3, #1
 800020c:	7023      	strb	r3, [r4, #0]
 800020e:	bd10      	pop	{r4, pc}
 8000210:	20000000 	.word	0x20000000
 8000214:	00000000 	.word	0x00000000
 8000218:	080008c8 	.word	0x080008c8

0800021c <frame_dummy>:
 800021c:	b508      	push	{r3, lr}
 800021e:	4b03      	ldr	r3, [pc, #12]	; (800022c <frame_dummy+0x10>)
 8000220:	b11b      	cbz	r3, 800022a <frame_dummy+0xe>
 8000222:	4903      	ldr	r1, [pc, #12]	; (8000230 <frame_dummy+0x14>)
 8000224:	4803      	ldr	r0, [pc, #12]	; (8000234 <frame_dummy+0x18>)
 8000226:	f3af 8000 	nop.w
 800022a:	bd08      	pop	{r3, pc}
 800022c:	00000000 	.word	0x00000000
 8000230:	20000004 	.word	0x20000004
 8000234:	080008c8 	.word	0x080008c8

08000238 <main>:


void delay(void);

int main(void)
{
 8000238:	b580      	push	{r7, lr}
 800023a:	b086      	sub	sp, #24
 800023c:	af00      	add	r7, sp, #0
    GPIO_Handle_t gpio_led;
    memset(&gpio_led, 0, sizeof(gpio_led));
 800023e:	f107 030c 	add.w	r3, r7, #12
 8000242:	220c      	movs	r2, #12
 8000244:	2100      	movs	r1, #0
 8000246:	4618      	mov	r0, r3
 8000248:	f000 fb36 	bl	80008b8 <memset>
    /*1. Initialize*/
    gpio_led.pGPIOx = GPIOB;
 800024c:	4b1a      	ldr	r3, [pc, #104]	; (80002b8 <main+0x80>)
 800024e:	60fb      	str	r3, [r7, #12]
    gpio_led.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_14;
 8000250:	230e      	movs	r3, #14
 8000252:	743b      	strb	r3, [r7, #16]
    gpio_led.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000254:	2301      	movs	r3, #1
 8000256:	747b      	strb	r3, [r7, #17]
    gpio_led.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_LOW;
 8000258:	2300      	movs	r3, #0
 800025a:	74bb      	strb	r3, [r7, #18]
    gpio_led.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 800025c:	2300      	movs	r3, #0
 800025e:	753b      	strb	r3, [r7, #20]
    gpio_led.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000260:	2300      	movs	r3, #0
 8000262:	74fb      	strb	r3, [r7, #19]

    GPIO_Handle_t gpio_btn;
    memset(&gpio_btn, 0, sizeof(gpio_btn));
 8000264:	463b      	mov	r3, r7
 8000266:	220c      	movs	r2, #12
 8000268:	2100      	movs	r1, #0
 800026a:	4618      	mov	r0, r3
 800026c:	f000 fb24 	bl	80008b8 <memset>

    gpio_btn.pGPIOx = GPIOC;
 8000270:	4b12      	ldr	r3, [pc, #72]	; (80002bc <main+0x84>)
 8000272:	603b      	str	r3, [r7, #0]
    gpio_btn.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
 8000274:	230d      	movs	r3, #13
 8000276:	713b      	strb	r3, [r7, #4]
    gpio_btn.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT;
 8000278:	2304      	movs	r3, #4
 800027a:	717b      	strb	r3, [r7, #5]
    gpio_btn.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800027c:	2302      	movs	r3, #2
 800027e:	71bb      	strb	r3, [r7, #6]
    gpio_btn.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_NO_PUPD;
 8000280:	2300      	movs	r3, #0
 8000282:	71fb      	strb	r3, [r7, #7]

    GPIO_PeriClkCtrl(GPIOB, ENABLE);
 8000284:	2101      	movs	r1, #1
 8000286:	480c      	ldr	r0, [pc, #48]	; (80002b8 <main+0x80>)
 8000288:	f000 f9ce 	bl	8000628 <GPIO_PeriClkCtrl>
    GPIO_PeriClkCtrl(GPIOC, ENABLE);
 800028c:	2101      	movs	r1, #1
 800028e:	480b      	ldr	r0, [pc, #44]	; (80002bc <main+0x84>)
 8000290:	f000 f9ca 	bl	8000628 <GPIO_PeriClkCtrl>

    GPIO_Init(&gpio_led);
 8000294:	f107 030c 	add.w	r3, r7, #12
 8000298:	4618      	mov	r0, r3
 800029a:	f000 f849 	bl	8000330 <GPIO_Init>
    GPIO_Init(&gpio_btn);
 800029e:	463b      	mov	r3, r7
 80002a0:	4618      	mov	r0, r3
 80002a2:	f000 f845 	bl	8000330 <GPIO_Init>

    GPIO_IRQInterruptConfig(IRQ_NUM_EXTI15_10, ENABLE);
 80002a6:	2101      	movs	r1, #1
 80002a8:	2028      	movs	r0, #40	; 0x28
 80002aa:	f000 fa15 	bl	80006d8 <GPIO_IRQInterruptConfig>
    GPIO_IRQPriorityConfig(IRQ_NUM_EXTI15_10, NVIC_IRQ_PRI15);
 80002ae:	210f      	movs	r1, #15
 80002b0:	2028      	movs	r0, #40	; 0x28
 80002b2:	f000 fa95 	bl	80007e0 <GPIO_IRQPriorityConfig>


    for (;;)
 80002b6:	e7fe      	b.n	80002b6 <main+0x7e>
 80002b8:	40020400 	.word	0x40020400
 80002bc:	40020800 	.word	0x40020800

080002c0 <EXTI15_10_IRQHandler>:

    return 0;
}

void EXTI15_10_IRQHandler (void)
{
 80002c0:	b580      	push	{r7, lr}
 80002c2:	af00      	add	r7, sp, #0
    //handle the interrupt
    GPIO_IRQHandling(GPIO_PIN_NO_13);
 80002c4:	200d      	movs	r0, #13
 80002c6:	f000 fab3 	bl	8000830 <GPIO_IRQHandling>

    GPIO_ToggleOutputPin(GPIOB, GPIO_PIN_NO_14);
 80002ca:	210e      	movs	r1, #14
 80002cc:	4802      	ldr	r0, [pc, #8]	; (80002d8 <EXTI15_10_IRQHandler+0x18>)
 80002ce:	f000 f9ef 	bl	80006b0 <GPIO_ToggleOutputPin>
}
 80002d2:	bf00      	nop
 80002d4:	bd80      	pop	{r7, pc}
 80002d6:	bf00      	nop
 80002d8:	40020400 	.word	0x40020400

080002dc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002dc:	480d      	ldr	r0, [pc, #52]	; (8000314 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002de:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002e0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002e4:	480c      	ldr	r0, [pc, #48]	; (8000318 <LoopForever+0x6>)
  ldr r1, =_edata
 80002e6:	490d      	ldr	r1, [pc, #52]	; (800031c <LoopForever+0xa>)
  ldr r2, =_sidata
 80002e8:	4a0d      	ldr	r2, [pc, #52]	; (8000320 <LoopForever+0xe>)
  movs r3, #0
 80002ea:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002ec:	e002      	b.n	80002f4 <LoopCopyDataInit>

080002ee <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002ee:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002f0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002f2:	3304      	adds	r3, #4

080002f4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002f4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002f6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002f8:	d3f9      	bcc.n	80002ee <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002fa:	4a0a      	ldr	r2, [pc, #40]	; (8000324 <LoopForever+0x12>)
  ldr r4, =_ebss
 80002fc:	4c0a      	ldr	r4, [pc, #40]	; (8000328 <LoopForever+0x16>)
  movs r3, #0
 80002fe:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000300:	e001      	b.n	8000306 <LoopFillZerobss>

08000302 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000302:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000304:	3204      	adds	r2, #4

08000306 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000306:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000308:	d3fb      	bcc.n	8000302 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800030a:	f000 fab1 	bl	8000870 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800030e:	f7ff ff93 	bl	8000238 <main>

08000312 <LoopForever>:

LoopForever:
    b LoopForever
 8000312:	e7fe      	b.n	8000312 <LoopForever>
  ldr   r0, =_estack
 8000314:	20080000 	.word	0x20080000
  ldr r0, =_sdata
 8000318:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800031c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000320:	080008e8 	.word	0x080008e8
  ldr r2, =_sbss
 8000324:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000328:	2000001c 	.word	0x2000001c

0800032c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800032c:	e7fe      	b.n	800032c <ADC_IRQHandler>
	...

08000330 <GPIO_Init>:
#include <stm32f767xx_gpio_driver.h>
#include <sys/_stdint.h>

void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8000330:	b480      	push	{r7}
 8000332:	b087      	sub	sp, #28
 8000334:	af00      	add	r7, sp, #0
 8000336:	6078      	str	r0, [r7, #4]
    uint32_t tmp = 0;
 8000338:	2300      	movs	r3, #0
 800033a:	617b      	str	r3, [r7, #20]
    //1. configure the mode
    if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANLG)
 800033c:	687b      	ldr	r3, [r7, #4]
 800033e:	795b      	ldrb	r3, [r3, #5]
 8000340:	2b03      	cmp	r3, #3
 8000342:	d81f      	bhi.n	8000384 <GPIO_Init+0x54>
    {
        tmp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000344:	687b      	ldr	r3, [r7, #4]
 8000346:	795b      	ldrb	r3, [r3, #5]
 8000348:	461a      	mov	r2, r3
 800034a:	687b      	ldr	r3, [r7, #4]
 800034c:	791b      	ldrb	r3, [r3, #4]
 800034e:	005b      	lsls	r3, r3, #1
 8000350:	fa02 f303 	lsl.w	r3, r2, r3
 8000354:	617b      	str	r3, [r7, #20]
        pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000356:	687b      	ldr	r3, [r7, #4]
 8000358:	681b      	ldr	r3, [r3, #0]
 800035a:	681a      	ldr	r2, [r3, #0]
 800035c:	687b      	ldr	r3, [r7, #4]
 800035e:	791b      	ldrb	r3, [r3, #4]
 8000360:	4619      	mov	r1, r3
 8000362:	2303      	movs	r3, #3
 8000364:	408b      	lsls	r3, r1
 8000366:	43db      	mvns	r3, r3
 8000368:	4619      	mov	r1, r3
 800036a:	687b      	ldr	r3, [r7, #4]
 800036c:	681b      	ldr	r3, [r3, #0]
 800036e:	400a      	ands	r2, r1
 8000370:	601a      	str	r2, [r3, #0]
        pGPIOHandle->pGPIOx->MODER |= tmp;
 8000372:	687b      	ldr	r3, [r7, #4]
 8000374:	681b      	ldr	r3, [r3, #0]
 8000376:	6819      	ldr	r1, [r3, #0]
 8000378:	687b      	ldr	r3, [r7, #4]
 800037a:	681b      	ldr	r3, [r3, #0]
 800037c:	697a      	ldr	r2, [r7, #20]
 800037e:	430a      	orrs	r2, r1
 8000380:	601a      	str	r2, [r3, #0]
 8000382:	e0a1      	b.n	80004c8 <GPIO_Init+0x198>
    }
    else
    {
        if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 8000384:	687b      	ldr	r3, [r7, #4]
 8000386:	795b      	ldrb	r3, [r3, #5]
 8000388:	2b04      	cmp	r3, #4
 800038a:	d117      	bne.n	80003bc <GPIO_Init+0x8c>
        {
            //1. Configure the FTSR (falling trigger selection register)
            EXTI->FTSR |= (1 << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800038c:	4b9d      	ldr	r3, [pc, #628]	; (8000604 <GPIO_Init+0x2d4>)
 800038e:	68db      	ldr	r3, [r3, #12]
 8000390:	687a      	ldr	r2, [r7, #4]
 8000392:	7912      	ldrb	r2, [r2, #4]
 8000394:	4611      	mov	r1, r2
 8000396:	2201      	movs	r2, #1
 8000398:	408a      	lsls	r2, r1
 800039a:	4611      	mov	r1, r2
 800039c:	4a99      	ldr	r2, [pc, #612]	; (8000604 <GPIO_Init+0x2d4>)
 800039e:	430b      	orrs	r3, r1
 80003a0:	60d3      	str	r3, [r2, #12]
            //clear the corresponding RTSR bit
            EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003a2:	4b98      	ldr	r3, [pc, #608]	; (8000604 <GPIO_Init+0x2d4>)
 80003a4:	689b      	ldr	r3, [r3, #8]
 80003a6:	687a      	ldr	r2, [r7, #4]
 80003a8:	7912      	ldrb	r2, [r2, #4]
 80003aa:	4611      	mov	r1, r2
 80003ac:	2201      	movs	r2, #1
 80003ae:	408a      	lsls	r2, r1
 80003b0:	43d2      	mvns	r2, r2
 80003b2:	4611      	mov	r1, r2
 80003b4:	4a93      	ldr	r2, [pc, #588]	; (8000604 <GPIO_Init+0x2d4>)
 80003b6:	400b      	ands	r3, r1
 80003b8:	6093      	str	r3, [r2, #8]
 80003ba:	e035      	b.n	8000428 <GPIO_Init+0xf8>

        }
        else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 80003bc:	687b      	ldr	r3, [r7, #4]
 80003be:	795b      	ldrb	r3, [r3, #5]
 80003c0:	2b05      	cmp	r3, #5
 80003c2:	d117      	bne.n	80003f4 <GPIO_Init+0xc4>
        {
            //1. Configure RTSR
            EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003c4:	4b8f      	ldr	r3, [pc, #572]	; (8000604 <GPIO_Init+0x2d4>)
 80003c6:	689b      	ldr	r3, [r3, #8]
 80003c8:	687a      	ldr	r2, [r7, #4]
 80003ca:	7912      	ldrb	r2, [r2, #4]
 80003cc:	4611      	mov	r1, r2
 80003ce:	2201      	movs	r2, #1
 80003d0:	408a      	lsls	r2, r1
 80003d2:	4611      	mov	r1, r2
 80003d4:	4a8b      	ldr	r2, [pc, #556]	; (8000604 <GPIO_Init+0x2d4>)
 80003d6:	430b      	orrs	r3, r1
 80003d8:	6093      	str	r3, [r2, #8]
            //clear the corresponding FTSR bit
            EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003da:	4b8a      	ldr	r3, [pc, #552]	; (8000604 <GPIO_Init+0x2d4>)
 80003dc:	68db      	ldr	r3, [r3, #12]
 80003de:	687a      	ldr	r2, [r7, #4]
 80003e0:	7912      	ldrb	r2, [r2, #4]
 80003e2:	4611      	mov	r1, r2
 80003e4:	2201      	movs	r2, #1
 80003e6:	408a      	lsls	r2, r1
 80003e8:	43d2      	mvns	r2, r2
 80003ea:	4611      	mov	r1, r2
 80003ec:	4a85      	ldr	r2, [pc, #532]	; (8000604 <GPIO_Init+0x2d4>)
 80003ee:	400b      	ands	r3, r1
 80003f0:	60d3      	str	r3, [r2, #12]
 80003f2:	e019      	b.n	8000428 <GPIO_Init+0xf8>
        }
        else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 80003f4:	687b      	ldr	r3, [r7, #4]
 80003f6:	795b      	ldrb	r3, [r3, #5]
 80003f8:	2b06      	cmp	r3, #6
 80003fa:	d115      	bne.n	8000428 <GPIO_Init+0xf8>
        {
            //1. Configure both FTSR and RTSR
            EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003fc:	4b81      	ldr	r3, [pc, #516]	; (8000604 <GPIO_Init+0x2d4>)
 80003fe:	68db      	ldr	r3, [r3, #12]
 8000400:	687a      	ldr	r2, [r7, #4]
 8000402:	7912      	ldrb	r2, [r2, #4]
 8000404:	4611      	mov	r1, r2
 8000406:	2201      	movs	r2, #1
 8000408:	408a      	lsls	r2, r1
 800040a:	4611      	mov	r1, r2
 800040c:	4a7d      	ldr	r2, [pc, #500]	; (8000604 <GPIO_Init+0x2d4>)
 800040e:	430b      	orrs	r3, r1
 8000410:	60d3      	str	r3, [r2, #12]
            //set the corresponding RTSR bit
            EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000412:	4b7c      	ldr	r3, [pc, #496]	; (8000604 <GPIO_Init+0x2d4>)
 8000414:	689b      	ldr	r3, [r3, #8]
 8000416:	687a      	ldr	r2, [r7, #4]
 8000418:	7912      	ldrb	r2, [r2, #4]
 800041a:	4611      	mov	r1, r2
 800041c:	2201      	movs	r2, #1
 800041e:	408a      	lsls	r2, r1
 8000420:	4611      	mov	r1, r2
 8000422:	4a78      	ldr	r2, [pc, #480]	; (8000604 <GPIO_Init+0x2d4>)
 8000424:	430b      	orrs	r3, r1
 8000426:	6093      	str	r3, [r2, #8]
        }

        //2. Configure the GPIO port selection in SYSCFG_EXTICR
        uint8_t tmp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 8000428:	687b      	ldr	r3, [r7, #4]
 800042a:	791b      	ldrb	r3, [r3, #4]
 800042c:	089b      	lsrs	r3, r3, #2
 800042e:	74fb      	strb	r3, [r7, #19]
        uint8_t tmp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 8000430:	687b      	ldr	r3, [r7, #4]
 8000432:	791b      	ldrb	r3, [r3, #4]
 8000434:	f003 0303 	and.w	r3, r3, #3
 8000438:	74bb      	strb	r3, [r7, #18]
        uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 800043a:	687b      	ldr	r3, [r7, #4]
 800043c:	681b      	ldr	r3, [r3, #0]
 800043e:	4a72      	ldr	r2, [pc, #456]	; (8000608 <GPIO_Init+0x2d8>)
 8000440:	4293      	cmp	r3, r2
 8000442:	d024      	beq.n	800048e <GPIO_Init+0x15e>
 8000444:	687b      	ldr	r3, [r7, #4]
 8000446:	681b      	ldr	r3, [r3, #0]
 8000448:	4a70      	ldr	r2, [pc, #448]	; (800060c <GPIO_Init+0x2dc>)
 800044a:	4293      	cmp	r3, r2
 800044c:	d01d      	beq.n	800048a <GPIO_Init+0x15a>
 800044e:	687b      	ldr	r3, [r7, #4]
 8000450:	681b      	ldr	r3, [r3, #0]
 8000452:	4a6f      	ldr	r2, [pc, #444]	; (8000610 <GPIO_Init+0x2e0>)
 8000454:	4293      	cmp	r3, r2
 8000456:	d016      	beq.n	8000486 <GPIO_Init+0x156>
 8000458:	687b      	ldr	r3, [r7, #4]
 800045a:	681b      	ldr	r3, [r3, #0]
 800045c:	4a6d      	ldr	r2, [pc, #436]	; (8000614 <GPIO_Init+0x2e4>)
 800045e:	4293      	cmp	r3, r2
 8000460:	d00f      	beq.n	8000482 <GPIO_Init+0x152>
 8000462:	687b      	ldr	r3, [r7, #4]
 8000464:	681b      	ldr	r3, [r3, #0]
 8000466:	4a6c      	ldr	r2, [pc, #432]	; (8000618 <GPIO_Init+0x2e8>)
 8000468:	4293      	cmp	r3, r2
 800046a:	d008      	beq.n	800047e <GPIO_Init+0x14e>
 800046c:	687b      	ldr	r3, [r7, #4]
 800046e:	681b      	ldr	r3, [r3, #0]
 8000470:	4a6a      	ldr	r2, [pc, #424]	; (800061c <GPIO_Init+0x2ec>)
 8000472:	4293      	cmp	r3, r2
 8000474:	d101      	bne.n	800047a <GPIO_Init+0x14a>
 8000476:	2305      	movs	r3, #5
 8000478:	e00a      	b.n	8000490 <GPIO_Init+0x160>
 800047a:	2300      	movs	r3, #0
 800047c:	e008      	b.n	8000490 <GPIO_Init+0x160>
 800047e:	2304      	movs	r3, #4
 8000480:	e006      	b.n	8000490 <GPIO_Init+0x160>
 8000482:	2303      	movs	r3, #3
 8000484:	e004      	b.n	8000490 <GPIO_Init+0x160>
 8000486:	2302      	movs	r3, #2
 8000488:	e002      	b.n	8000490 <GPIO_Init+0x160>
 800048a:	2301      	movs	r3, #1
 800048c:	e000      	b.n	8000490 <GPIO_Init+0x160>
 800048e:	2300      	movs	r3, #0
 8000490:	747b      	strb	r3, [r7, #17]
        SYSCFG_PCLK_EN();
 8000492:	4b63      	ldr	r3, [pc, #396]	; (8000620 <GPIO_Init+0x2f0>)
 8000494:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000496:	4a62      	ldr	r2, [pc, #392]	; (8000620 <GPIO_Init+0x2f0>)
 8000498:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800049c:	6453      	str	r3, [r2, #68]	; 0x44
        SYSCFG->EXTICR[tmp1] = portcode << (tmp2 * 4);
 800049e:	7c7a      	ldrb	r2, [r7, #17]
 80004a0:	7cbb      	ldrb	r3, [r7, #18]
 80004a2:	009b      	lsls	r3, r3, #2
 80004a4:	fa02 f103 	lsl.w	r1, r2, r3
 80004a8:	4a5e      	ldr	r2, [pc, #376]	; (8000624 <GPIO_Init+0x2f4>)
 80004aa:	7cfb      	ldrb	r3, [r7, #19]
 80004ac:	3302      	adds	r3, #2
 80004ae:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

        //3. Enable the exti interrupt delivery using IMR
        EXTI->IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004b2:	4b54      	ldr	r3, [pc, #336]	; (8000604 <GPIO_Init+0x2d4>)
 80004b4:	681b      	ldr	r3, [r3, #0]
 80004b6:	687a      	ldr	r2, [r7, #4]
 80004b8:	7912      	ldrb	r2, [r2, #4]
 80004ba:	4611      	mov	r1, r2
 80004bc:	2201      	movs	r2, #1
 80004be:	408a      	lsls	r2, r1
 80004c0:	4611      	mov	r1, r2
 80004c2:	4a50      	ldr	r2, [pc, #320]	; (8000604 <GPIO_Init+0x2d4>)
 80004c4:	430b      	orrs	r3, r1
 80004c6:	6013      	str	r3, [r2, #0]
    }

    //2. config. the speed
    tmp = 0;
 80004c8:	2300      	movs	r3, #0
 80004ca:	617b      	str	r3, [r7, #20]
    tmp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004cc:	687b      	ldr	r3, [r7, #4]
 80004ce:	799b      	ldrb	r3, [r3, #6]
 80004d0:	461a      	mov	r2, r3
 80004d2:	687b      	ldr	r3, [r7, #4]
 80004d4:	791b      	ldrb	r3, [r3, #4]
 80004d6:	005b      	lsls	r3, r3, #1
 80004d8:	fa02 f303 	lsl.w	r3, r2, r3
 80004dc:	617b      	str	r3, [r7, #20]
    pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80004de:	687b      	ldr	r3, [r7, #4]
 80004e0:	681b      	ldr	r3, [r3, #0]
 80004e2:	689a      	ldr	r2, [r3, #8]
 80004e4:	687b      	ldr	r3, [r7, #4]
 80004e6:	791b      	ldrb	r3, [r3, #4]
 80004e8:	4619      	mov	r1, r3
 80004ea:	2303      	movs	r3, #3
 80004ec:	408b      	lsls	r3, r1
 80004ee:	43db      	mvns	r3, r3
 80004f0:	4619      	mov	r1, r3
 80004f2:	687b      	ldr	r3, [r7, #4]
 80004f4:	681b      	ldr	r3, [r3, #0]
 80004f6:	400a      	ands	r2, r1
 80004f8:	609a      	str	r2, [r3, #8]
    pGPIOHandle->pGPIOx->OSPEEDR |= tmp;
 80004fa:	687b      	ldr	r3, [r7, #4]
 80004fc:	681b      	ldr	r3, [r3, #0]
 80004fe:	6899      	ldr	r1, [r3, #8]
 8000500:	687b      	ldr	r3, [r7, #4]
 8000502:	681b      	ldr	r3, [r3, #0]
 8000504:	697a      	ldr	r2, [r7, #20]
 8000506:	430a      	orrs	r2, r1
 8000508:	609a      	str	r2, [r3, #8]

    //3. config the pupd settings
    tmp = 0;
 800050a:	2300      	movs	r3, #0
 800050c:	617b      	str	r3, [r7, #20]
    tmp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800050e:	687b      	ldr	r3, [r7, #4]
 8000510:	79db      	ldrb	r3, [r3, #7]
 8000512:	461a      	mov	r2, r3
 8000514:	687b      	ldr	r3, [r7, #4]
 8000516:	791b      	ldrb	r3, [r3, #4]
 8000518:	005b      	lsls	r3, r3, #1
 800051a:	fa02 f303 	lsl.w	r3, r2, r3
 800051e:	617b      	str	r3, [r7, #20]
    pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000520:	687b      	ldr	r3, [r7, #4]
 8000522:	681b      	ldr	r3, [r3, #0]
 8000524:	68da      	ldr	r2, [r3, #12]
 8000526:	687b      	ldr	r3, [r7, #4]
 8000528:	791b      	ldrb	r3, [r3, #4]
 800052a:	4619      	mov	r1, r3
 800052c:	2303      	movs	r3, #3
 800052e:	408b      	lsls	r3, r1
 8000530:	43db      	mvns	r3, r3
 8000532:	4619      	mov	r1, r3
 8000534:	687b      	ldr	r3, [r7, #4]
 8000536:	681b      	ldr	r3, [r3, #0]
 8000538:	400a      	ands	r2, r1
 800053a:	60da      	str	r2, [r3, #12]
    pGPIOHandle->pGPIOx->PUPDR |= tmp;
 800053c:	687b      	ldr	r3, [r7, #4]
 800053e:	681b      	ldr	r3, [r3, #0]
 8000540:	68d9      	ldr	r1, [r3, #12]
 8000542:	687b      	ldr	r3, [r7, #4]
 8000544:	681b      	ldr	r3, [r3, #0]
 8000546:	697a      	ldr	r2, [r7, #20]
 8000548:	430a      	orrs	r2, r1
 800054a:	60da      	str	r2, [r3, #12]

    //4. config. the optype
    tmp = 0;
 800054c:	2300      	movs	r3, #0
 800054e:	617b      	str	r3, [r7, #20]
    tmp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000550:	687b      	ldr	r3, [r7, #4]
 8000552:	7a1b      	ldrb	r3, [r3, #8]
 8000554:	461a      	mov	r2, r3
 8000556:	687b      	ldr	r3, [r7, #4]
 8000558:	791b      	ldrb	r3, [r3, #4]
 800055a:	fa02 f303 	lsl.w	r3, r2, r3
 800055e:	617b      	str	r3, [r7, #20]
    pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000560:	687b      	ldr	r3, [r7, #4]
 8000562:	681b      	ldr	r3, [r3, #0]
 8000564:	685a      	ldr	r2, [r3, #4]
 8000566:	687b      	ldr	r3, [r7, #4]
 8000568:	791b      	ldrb	r3, [r3, #4]
 800056a:	4619      	mov	r1, r3
 800056c:	2301      	movs	r3, #1
 800056e:	408b      	lsls	r3, r1
 8000570:	43db      	mvns	r3, r3
 8000572:	4619      	mov	r1, r3
 8000574:	687b      	ldr	r3, [r7, #4]
 8000576:	681b      	ldr	r3, [r3, #0]
 8000578:	400a      	ands	r2, r1
 800057a:	605a      	str	r2, [r3, #4]
    pGPIOHandle->pGPIOx->OTYPER |= tmp;
 800057c:	687b      	ldr	r3, [r7, #4]
 800057e:	681b      	ldr	r3, [r3, #0]
 8000580:	6859      	ldr	r1, [r3, #4]
 8000582:	687b      	ldr	r3, [r7, #4]
 8000584:	681b      	ldr	r3, [r3, #0]
 8000586:	697a      	ldr	r2, [r7, #20]
 8000588:	430a      	orrs	r2, r1
 800058a:	605a      	str	r2, [r3, #4]

    //5. config the alt. functionallity
    if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 800058c:	687b      	ldr	r3, [r7, #4]
 800058e:	795b      	ldrb	r3, [r3, #5]
 8000590:	2b02      	cmp	r3, #2
 8000592:	d131      	bne.n	80005f8 <GPIO_Init+0x2c8>
    {
        uint8_t tmp_1, tmp_2;
        tmp_1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 8000594:	687b      	ldr	r3, [r7, #4]
 8000596:	791b      	ldrb	r3, [r3, #4]
 8000598:	08db      	lsrs	r3, r3, #3
 800059a:	743b      	strb	r3, [r7, #16]
        tmp_2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 800059c:	687b      	ldr	r3, [r7, #4]
 800059e:	791b      	ldrb	r3, [r3, #4]
 80005a0:	f003 0307 	and.w	r3, r3, #7
 80005a4:	73fb      	strb	r3, [r7, #15]

        pGPIOHandle->pGPIOx->AFR[tmp_1] &= ~(0xF << (4*tmp_2));
 80005a6:	687b      	ldr	r3, [r7, #4]
 80005a8:	681b      	ldr	r3, [r3, #0]
 80005aa:	7c3a      	ldrb	r2, [r7, #16]
 80005ac:	3208      	adds	r2, #8
 80005ae:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80005b2:	7bfb      	ldrb	r3, [r7, #15]
 80005b4:	009b      	lsls	r3, r3, #2
 80005b6:	220f      	movs	r2, #15
 80005b8:	fa02 f303 	lsl.w	r3, r2, r3
 80005bc:	43db      	mvns	r3, r3
 80005be:	4618      	mov	r0, r3
 80005c0:	687b      	ldr	r3, [r7, #4]
 80005c2:	681b      	ldr	r3, [r3, #0]
 80005c4:	7c3a      	ldrb	r2, [r7, #16]
 80005c6:	4001      	ands	r1, r0
 80005c8:	3208      	adds	r2, #8
 80005ca:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
        pGPIOHandle->pGPIOx->AFR[tmp_1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4*tmp_2));
 80005ce:	687b      	ldr	r3, [r7, #4]
 80005d0:	681b      	ldr	r3, [r3, #0]
 80005d2:	7c3a      	ldrb	r2, [r7, #16]
 80005d4:	3208      	adds	r2, #8
 80005d6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80005da:	687b      	ldr	r3, [r7, #4]
 80005dc:	7a5b      	ldrb	r3, [r3, #9]
 80005de:	461a      	mov	r2, r3
 80005e0:	7bfb      	ldrb	r3, [r7, #15]
 80005e2:	009b      	lsls	r3, r3, #2
 80005e4:	fa02 f303 	lsl.w	r3, r2, r3
 80005e8:	4618      	mov	r0, r3
 80005ea:	687b      	ldr	r3, [r7, #4]
 80005ec:	681b      	ldr	r3, [r3, #0]
 80005ee:	7c3a      	ldrb	r2, [r7, #16]
 80005f0:	4301      	orrs	r1, r0
 80005f2:	3208      	adds	r2, #8
 80005f4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    }
}
 80005f8:	bf00      	nop
 80005fa:	371c      	adds	r7, #28
 80005fc:	46bd      	mov	sp, r7
 80005fe:	bc80      	pop	{r7}
 8000600:	4770      	bx	lr
 8000602:	bf00      	nop
 8000604:	40013c00 	.word	0x40013c00
 8000608:	40020000 	.word	0x40020000
 800060c:	40020400 	.word	0x40020400
 8000610:	40020800 	.word	0x40020800
 8000614:	40020c00 	.word	0x40020c00
 8000618:	40021000 	.word	0x40021000
 800061c:	40021400 	.word	0x40021400
 8000620:	40023800 	.word	0x40023800
 8000624:	40013800 	.word	0x40013800

08000628 <GPIO_PeriClkCtrl>:
    }

}

void GPIO_PeriClkCtrl(GPIO_RegDef_t *pGPIOx, uint8_t EnOrDi)
{
 8000628:	b480      	push	{r7}
 800062a:	b083      	sub	sp, #12
 800062c:	af00      	add	r7, sp, #0
 800062e:	6078      	str	r0, [r7, #4]
 8000630:	460b      	mov	r3, r1
 8000632:	70fb      	strb	r3, [r7, #3]
    if (EnOrDi == ENABLE)
 8000634:	78fb      	ldrb	r3, [r7, #3]
 8000636:	2b01      	cmp	r3, #1
 8000638:	d12a      	bne.n	8000690 <GPIO_PeriClkCtrl+0x68>
    {
        if (pGPIOx == GPIOA)
 800063a:	687b      	ldr	r3, [r7, #4]
 800063c:	4a17      	ldr	r2, [pc, #92]	; (800069c <GPIO_PeriClkCtrl+0x74>)
 800063e:	4293      	cmp	r3, r2
 8000640:	d106      	bne.n	8000650 <GPIO_PeriClkCtrl+0x28>
        {
            GPIOA_PCLK_EN();
 8000642:	4b17      	ldr	r3, [pc, #92]	; (80006a0 <GPIO_PeriClkCtrl+0x78>)
 8000644:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000646:	4a16      	ldr	r2, [pc, #88]	; (80006a0 <GPIO_PeriClkCtrl+0x78>)
 8000648:	f043 0301 	orr.w	r3, r3, #1
 800064c:	6313      	str	r3, [r2, #48]	; 0x30
    }
    else
    {

    }
}
 800064e:	e01f      	b.n	8000690 <GPIO_PeriClkCtrl+0x68>
        else if (pGPIOx == GPIOB)
 8000650:	687b      	ldr	r3, [r7, #4]
 8000652:	4a14      	ldr	r2, [pc, #80]	; (80006a4 <GPIO_PeriClkCtrl+0x7c>)
 8000654:	4293      	cmp	r3, r2
 8000656:	d106      	bne.n	8000666 <GPIO_PeriClkCtrl+0x3e>
            GPIOB_PCLK_EN();
 8000658:	4b11      	ldr	r3, [pc, #68]	; (80006a0 <GPIO_PeriClkCtrl+0x78>)
 800065a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800065c:	4a10      	ldr	r2, [pc, #64]	; (80006a0 <GPIO_PeriClkCtrl+0x78>)
 800065e:	f043 0302 	orr.w	r3, r3, #2
 8000662:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000664:	e014      	b.n	8000690 <GPIO_PeriClkCtrl+0x68>
        else if (pGPIOx == GPIOC)
 8000666:	687b      	ldr	r3, [r7, #4]
 8000668:	4a0f      	ldr	r2, [pc, #60]	; (80006a8 <GPIO_PeriClkCtrl+0x80>)
 800066a:	4293      	cmp	r3, r2
 800066c:	d106      	bne.n	800067c <GPIO_PeriClkCtrl+0x54>
            GPIOC_PCLK_EN();
 800066e:	4b0c      	ldr	r3, [pc, #48]	; (80006a0 <GPIO_PeriClkCtrl+0x78>)
 8000670:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000672:	4a0b      	ldr	r2, [pc, #44]	; (80006a0 <GPIO_PeriClkCtrl+0x78>)
 8000674:	f043 0304 	orr.w	r3, r3, #4
 8000678:	6313      	str	r3, [r2, #48]	; 0x30
}
 800067a:	e009      	b.n	8000690 <GPIO_PeriClkCtrl+0x68>
        else if (pGPIOx == GPIOD)
 800067c:	687b      	ldr	r3, [r7, #4]
 800067e:	4a0b      	ldr	r2, [pc, #44]	; (80006ac <GPIO_PeriClkCtrl+0x84>)
 8000680:	4293      	cmp	r3, r2
 8000682:	d105      	bne.n	8000690 <GPIO_PeriClkCtrl+0x68>
            GPIOD_PCLK_EN();
 8000684:	4b06      	ldr	r3, [pc, #24]	; (80006a0 <GPIO_PeriClkCtrl+0x78>)
 8000686:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000688:	4a05      	ldr	r2, [pc, #20]	; (80006a0 <GPIO_PeriClkCtrl+0x78>)
 800068a:	f043 0308 	orr.w	r3, r3, #8
 800068e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000690:	bf00      	nop
 8000692:	370c      	adds	r7, #12
 8000694:	46bd      	mov	sp, r7
 8000696:	bc80      	pop	{r7}
 8000698:	4770      	bx	lr
 800069a:	bf00      	nop
 800069c:	40020000 	.word	0x40020000
 80006a0:	40023800 	.word	0x40023800
 80006a4:	40020400 	.word	0x40020400
 80006a8:	40020800 	.word	0x40020800
 80006ac:	40020c00 	.word	0x40020c00

080006b0 <GPIO_ToggleOutputPin>:
{
    pGPIOx->ODR = Value;
}

void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 80006b0:	b480      	push	{r7}
 80006b2:	b083      	sub	sp, #12
 80006b4:	af00      	add	r7, sp, #0
 80006b6:	6078      	str	r0, [r7, #4]
 80006b8:	460b      	mov	r3, r1
 80006ba:	70fb      	strb	r3, [r7, #3]
    pGPIOx->ODR ^= (1 << PinNumber);
 80006bc:	687b      	ldr	r3, [r7, #4]
 80006be:	695b      	ldr	r3, [r3, #20]
 80006c0:	78fa      	ldrb	r2, [r7, #3]
 80006c2:	2101      	movs	r1, #1
 80006c4:	fa01 f202 	lsl.w	r2, r1, r2
 80006c8:	405a      	eors	r2, r3
 80006ca:	687b      	ldr	r3, [r7, #4]
 80006cc:	615a      	str	r2, [r3, #20]
}
 80006ce:	bf00      	nop
 80006d0:	370c      	adds	r7, #12
 80006d2:	46bd      	mov	sp, r7
 80006d4:	bc80      	pop	{r7}
 80006d6:	4770      	bx	lr

080006d8 <GPIO_IRQInterruptConfig>:

void GPIO_IRQInterruptConfig(uint8_t IRQNumber, uint8_t EnOrDi)
{
 80006d8:	b480      	push	{r7}
 80006da:	b083      	sub	sp, #12
 80006dc:	af00      	add	r7, sp, #0
 80006de:	4603      	mov	r3, r0
 80006e0:	460a      	mov	r2, r1
 80006e2:	71fb      	strb	r3, [r7, #7]
 80006e4:	4613      	mov	r3, r2
 80006e6:	71bb      	strb	r3, [r7, #6]
    if (EnOrDi == ENABLE)
 80006e8:	79bb      	ldrb	r3, [r7, #6]
 80006ea:	2b01      	cmp	r3, #1
 80006ec:	d133      	bne.n	8000756 <GPIO_IRQInterruptConfig+0x7e>
    {
        if (IRQNumber <= 31)
 80006ee:	79fb      	ldrb	r3, [r7, #7]
 80006f0:	2b1f      	cmp	r3, #31
 80006f2:	d80a      	bhi.n	800070a <GPIO_IRQInterruptConfig+0x32>
        {
            *NVIC_ISER0 |= (1 << IRQNumber);
 80006f4:	4b34      	ldr	r3, [pc, #208]	; (80007c8 <GPIO_IRQInterruptConfig+0xf0>)
 80006f6:	681b      	ldr	r3, [r3, #0]
 80006f8:	79fa      	ldrb	r2, [r7, #7]
 80006fa:	2101      	movs	r1, #1
 80006fc:	fa01 f202 	lsl.w	r2, r1, r2
 8000700:	4611      	mov	r1, r2
 8000702:	4a31      	ldr	r2, [pc, #196]	; (80007c8 <GPIO_IRQInterruptConfig+0xf0>)
 8000704:	430b      	orrs	r3, r1
 8000706:	6013      	str	r3, [r2, #0]
        {
            *NVIC_ICER3 |= (1 << (IRQNumber % 64));
        }
    }

}
 8000708:	e059      	b.n	80007be <GPIO_IRQInterruptConfig+0xe6>
        else if(IRQNumber > 31 && IRQNumber < 64)
 800070a:	79fb      	ldrb	r3, [r7, #7]
 800070c:	2b1f      	cmp	r3, #31
 800070e:	d90f      	bls.n	8000730 <GPIO_IRQInterruptConfig+0x58>
 8000710:	79fb      	ldrb	r3, [r7, #7]
 8000712:	2b3f      	cmp	r3, #63	; 0x3f
 8000714:	d80c      	bhi.n	8000730 <GPIO_IRQInterruptConfig+0x58>
            *NVIC_ISER1 |= (1 << (IRQNumber % 32));
 8000716:	4b2d      	ldr	r3, [pc, #180]	; (80007cc <GPIO_IRQInterruptConfig+0xf4>)
 8000718:	681b      	ldr	r3, [r3, #0]
 800071a:	79fa      	ldrb	r2, [r7, #7]
 800071c:	f002 021f 	and.w	r2, r2, #31
 8000720:	2101      	movs	r1, #1
 8000722:	fa01 f202 	lsl.w	r2, r1, r2
 8000726:	4611      	mov	r1, r2
 8000728:	4a28      	ldr	r2, [pc, #160]	; (80007cc <GPIO_IRQInterruptConfig+0xf4>)
 800072a:	430b      	orrs	r3, r1
 800072c:	6013      	str	r3, [r2, #0]
 800072e:	e046      	b.n	80007be <GPIO_IRQInterruptConfig+0xe6>
        else if (IRQNumber >= 64 && IRQNumber < 96)
 8000730:	79fb      	ldrb	r3, [r7, #7]
 8000732:	2b3f      	cmp	r3, #63	; 0x3f
 8000734:	d943      	bls.n	80007be <GPIO_IRQInterruptConfig+0xe6>
 8000736:	79fb      	ldrb	r3, [r7, #7]
 8000738:	2b5f      	cmp	r3, #95	; 0x5f
 800073a:	d840      	bhi.n	80007be <GPIO_IRQInterruptConfig+0xe6>
            *NVIC_ISER3 |= (1 << (IRQNumber % 64));
 800073c:	4b24      	ldr	r3, [pc, #144]	; (80007d0 <GPIO_IRQInterruptConfig+0xf8>)
 800073e:	681b      	ldr	r3, [r3, #0]
 8000740:	79fa      	ldrb	r2, [r7, #7]
 8000742:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 8000746:	2101      	movs	r1, #1
 8000748:	fa01 f202 	lsl.w	r2, r1, r2
 800074c:	4611      	mov	r1, r2
 800074e:	4a20      	ldr	r2, [pc, #128]	; (80007d0 <GPIO_IRQInterruptConfig+0xf8>)
 8000750:	430b      	orrs	r3, r1
 8000752:	6013      	str	r3, [r2, #0]
}
 8000754:	e033      	b.n	80007be <GPIO_IRQInterruptConfig+0xe6>
        if (IRQNumber <= 31)
 8000756:	79fb      	ldrb	r3, [r7, #7]
 8000758:	2b1f      	cmp	r3, #31
 800075a:	d80a      	bhi.n	8000772 <GPIO_IRQInterruptConfig+0x9a>
            *NVIC_ICER0 |= (1 << IRQNumber);
 800075c:	4b1d      	ldr	r3, [pc, #116]	; (80007d4 <GPIO_IRQInterruptConfig+0xfc>)
 800075e:	681b      	ldr	r3, [r3, #0]
 8000760:	79fa      	ldrb	r2, [r7, #7]
 8000762:	2101      	movs	r1, #1
 8000764:	fa01 f202 	lsl.w	r2, r1, r2
 8000768:	4611      	mov	r1, r2
 800076a:	4a1a      	ldr	r2, [pc, #104]	; (80007d4 <GPIO_IRQInterruptConfig+0xfc>)
 800076c:	430b      	orrs	r3, r1
 800076e:	6013      	str	r3, [r2, #0]
}
 8000770:	e025      	b.n	80007be <GPIO_IRQInterruptConfig+0xe6>
        else if(IRQNumber > 31 && IRQNumber < 64)
 8000772:	79fb      	ldrb	r3, [r7, #7]
 8000774:	2b1f      	cmp	r3, #31
 8000776:	d90f      	bls.n	8000798 <GPIO_IRQInterruptConfig+0xc0>
 8000778:	79fb      	ldrb	r3, [r7, #7]
 800077a:	2b3f      	cmp	r3, #63	; 0x3f
 800077c:	d80c      	bhi.n	8000798 <GPIO_IRQInterruptConfig+0xc0>
            *NVIC_ICER1 |= (1 << (IRQNumber % 32));
 800077e:	4b16      	ldr	r3, [pc, #88]	; (80007d8 <GPIO_IRQInterruptConfig+0x100>)
 8000780:	681b      	ldr	r3, [r3, #0]
 8000782:	79fa      	ldrb	r2, [r7, #7]
 8000784:	f002 021f 	and.w	r2, r2, #31
 8000788:	2101      	movs	r1, #1
 800078a:	fa01 f202 	lsl.w	r2, r1, r2
 800078e:	4611      	mov	r1, r2
 8000790:	4a11      	ldr	r2, [pc, #68]	; (80007d8 <GPIO_IRQInterruptConfig+0x100>)
 8000792:	430b      	orrs	r3, r1
 8000794:	6013      	str	r3, [r2, #0]
 8000796:	e012      	b.n	80007be <GPIO_IRQInterruptConfig+0xe6>
        else if (IRQNumber >= 64 && IRQNumber < 96)
 8000798:	79fb      	ldrb	r3, [r7, #7]
 800079a:	2b3f      	cmp	r3, #63	; 0x3f
 800079c:	d90f      	bls.n	80007be <GPIO_IRQInterruptConfig+0xe6>
 800079e:	79fb      	ldrb	r3, [r7, #7]
 80007a0:	2b5f      	cmp	r3, #95	; 0x5f
 80007a2:	d80c      	bhi.n	80007be <GPIO_IRQInterruptConfig+0xe6>
            *NVIC_ICER3 |= (1 << (IRQNumber % 64));
 80007a4:	4b0d      	ldr	r3, [pc, #52]	; (80007dc <GPIO_IRQInterruptConfig+0x104>)
 80007a6:	681b      	ldr	r3, [r3, #0]
 80007a8:	79fa      	ldrb	r2, [r7, #7]
 80007aa:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80007ae:	2101      	movs	r1, #1
 80007b0:	fa01 f202 	lsl.w	r2, r1, r2
 80007b4:	4611      	mov	r1, r2
 80007b6:	4a09      	ldr	r2, [pc, #36]	; (80007dc <GPIO_IRQInterruptConfig+0x104>)
 80007b8:	430b      	orrs	r3, r1
 80007ba:	6013      	str	r3, [r2, #0]
}
 80007bc:	e7ff      	b.n	80007be <GPIO_IRQInterruptConfig+0xe6>
 80007be:	bf00      	nop
 80007c0:	370c      	adds	r7, #12
 80007c2:	46bd      	mov	sp, r7
 80007c4:	bc80      	pop	{r7}
 80007c6:	4770      	bx	lr
 80007c8:	e000e100 	.word	0xe000e100
 80007cc:	e000e104 	.word	0xe000e104
 80007d0:	e000e10c 	.word	0xe000e10c
 80007d4:	e000e180 	.word	0xe000e180
 80007d8:	e000e184 	.word	0xe000e184
 80007dc:	e000e18c 	.word	0xe000e18c

080007e0 <GPIO_IRQPriorityConfig>:

void GPIO_IRQPriorityConfig(uint8_t IRQNumber, uint32_t IRQPriority)
{
 80007e0:	b480      	push	{r7}
 80007e2:	b085      	sub	sp, #20
 80007e4:	af00      	add	r7, sp, #0
 80007e6:	4603      	mov	r3, r0
 80007e8:	6039      	str	r1, [r7, #0]
 80007ea:	71fb      	strb	r3, [r7, #7]
    uint8_t iprx, iprx_section;

    iprx = IRQNumber / 4;
 80007ec:	79fb      	ldrb	r3, [r7, #7]
 80007ee:	089b      	lsrs	r3, r3, #2
 80007f0:	73fb      	strb	r3, [r7, #15]
    iprx_section = IRQNumber % 4;
 80007f2:	79fb      	ldrb	r3, [r7, #7]
 80007f4:	f003 0303 	and.w	r3, r3, #3
 80007f8:	73bb      	strb	r3, [r7, #14]

    uint8_t shift_amount = (8 * iprx_section) + (8 - NUM_PR_BITS_IMPLEMENTED);
 80007fa:	7bbb      	ldrb	r3, [r7, #14]
 80007fc:	00db      	lsls	r3, r3, #3
 80007fe:	b2db      	uxtb	r3, r3
 8000800:	3304      	adds	r3, #4
 8000802:	737b      	strb	r3, [r7, #13]
    *(NVIC_PR_BASE_ADDR + iprx) |= (IRQPriority << shift_amount);
 8000804:	7bfb      	ldrb	r3, [r7, #15]
 8000806:	009a      	lsls	r2, r3, #2
 8000808:	4b08      	ldr	r3, [pc, #32]	; (800082c <GPIO_IRQPriorityConfig+0x4c>)
 800080a:	4413      	add	r3, r2
 800080c:	6819      	ldr	r1, [r3, #0]
 800080e:	7b7b      	ldrb	r3, [r7, #13]
 8000810:	683a      	ldr	r2, [r7, #0]
 8000812:	409a      	lsls	r2, r3
 8000814:	7bfb      	ldrb	r3, [r7, #15]
 8000816:	0098      	lsls	r0, r3, #2
 8000818:	4b04      	ldr	r3, [pc, #16]	; (800082c <GPIO_IRQPriorityConfig+0x4c>)
 800081a:	4403      	add	r3, r0
 800081c:	430a      	orrs	r2, r1
 800081e:	601a      	str	r2, [r3, #0]
}
 8000820:	bf00      	nop
 8000822:	3714      	adds	r7, #20
 8000824:	46bd      	mov	sp, r7
 8000826:	bc80      	pop	{r7}
 8000828:	4770      	bx	lr
 800082a:	bf00      	nop
 800082c:	e000e400 	.word	0xe000e400

08000830 <GPIO_IRQHandling>:


void GPIO_IRQHandling(uint8_t PinNumber)
{
 8000830:	b480      	push	{r7}
 8000832:	b083      	sub	sp, #12
 8000834:	af00      	add	r7, sp, #0
 8000836:	4603      	mov	r3, r0
 8000838:	71fb      	strb	r3, [r7, #7]
    //Clear the exti pr register corresponding to the pin number
    if (EXTI->PR & (1 << PinNumber))
 800083a:	4b0c      	ldr	r3, [pc, #48]	; (800086c <GPIO_IRQHandling+0x3c>)
 800083c:	695b      	ldr	r3, [r3, #20]
 800083e:	79fa      	ldrb	r2, [r7, #7]
 8000840:	2101      	movs	r1, #1
 8000842:	fa01 f202 	lsl.w	r2, r1, r2
 8000846:	4013      	ands	r3, r2
 8000848:	2b00      	cmp	r3, #0
 800084a:	d009      	beq.n	8000860 <GPIO_IRQHandling+0x30>
    {
       //clear
       EXTI->PR |= (1 << PinNumber);
 800084c:	4b07      	ldr	r3, [pc, #28]	; (800086c <GPIO_IRQHandling+0x3c>)
 800084e:	695b      	ldr	r3, [r3, #20]
 8000850:	79fa      	ldrb	r2, [r7, #7]
 8000852:	2101      	movs	r1, #1
 8000854:	fa01 f202 	lsl.w	r2, r1, r2
 8000858:	4611      	mov	r1, r2
 800085a:	4a04      	ldr	r2, [pc, #16]	; (800086c <GPIO_IRQHandling+0x3c>)
 800085c:	430b      	orrs	r3, r1
 800085e:	6153      	str	r3, [r2, #20]
    }
}
 8000860:	bf00      	nop
 8000862:	370c      	adds	r7, #12
 8000864:	46bd      	mov	sp, r7
 8000866:	bc80      	pop	{r7}
 8000868:	4770      	bx	lr
 800086a:	bf00      	nop
 800086c:	40013c00 	.word	0x40013c00

08000870 <__libc_init_array>:
 8000870:	b570      	push	{r4, r5, r6, lr}
 8000872:	4d0d      	ldr	r5, [pc, #52]	; (80008a8 <__libc_init_array+0x38>)
 8000874:	4c0d      	ldr	r4, [pc, #52]	; (80008ac <__libc_init_array+0x3c>)
 8000876:	1b64      	subs	r4, r4, r5
 8000878:	10a4      	asrs	r4, r4, #2
 800087a:	2600      	movs	r6, #0
 800087c:	42a6      	cmp	r6, r4
 800087e:	d109      	bne.n	8000894 <__libc_init_array+0x24>
 8000880:	4d0b      	ldr	r5, [pc, #44]	; (80008b0 <__libc_init_array+0x40>)
 8000882:	4c0c      	ldr	r4, [pc, #48]	; (80008b4 <__libc_init_array+0x44>)
 8000884:	f000 f820 	bl	80008c8 <_init>
 8000888:	1b64      	subs	r4, r4, r5
 800088a:	10a4      	asrs	r4, r4, #2
 800088c:	2600      	movs	r6, #0
 800088e:	42a6      	cmp	r6, r4
 8000890:	d105      	bne.n	800089e <__libc_init_array+0x2e>
 8000892:	bd70      	pop	{r4, r5, r6, pc}
 8000894:	f855 3b04 	ldr.w	r3, [r5], #4
 8000898:	4798      	blx	r3
 800089a:	3601      	adds	r6, #1
 800089c:	e7ee      	b.n	800087c <__libc_init_array+0xc>
 800089e:	f855 3b04 	ldr.w	r3, [r5], #4
 80008a2:	4798      	blx	r3
 80008a4:	3601      	adds	r6, #1
 80008a6:	e7f2      	b.n	800088e <__libc_init_array+0x1e>
 80008a8:	080008e0 	.word	0x080008e0
 80008ac:	080008e0 	.word	0x080008e0
 80008b0:	080008e0 	.word	0x080008e0
 80008b4:	080008e4 	.word	0x080008e4

080008b8 <memset>:
 80008b8:	4402      	add	r2, r0
 80008ba:	4603      	mov	r3, r0
 80008bc:	4293      	cmp	r3, r2
 80008be:	d100      	bne.n	80008c2 <memset+0xa>
 80008c0:	4770      	bx	lr
 80008c2:	f803 1b01 	strb.w	r1, [r3], #1
 80008c6:	e7f9      	b.n	80008bc <memset+0x4>

080008c8 <_init>:
 80008c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008ca:	bf00      	nop
 80008cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80008ce:	bc08      	pop	{r3}
 80008d0:	469e      	mov	lr, r3
 80008d2:	4770      	bx	lr

080008d4 <_fini>:
 80008d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008d6:	bf00      	nop
 80008d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80008da:	bc08      	pop	{r3}
 80008dc:	469e      	mov	lr, r3
 80008de:	4770      	bx	lr
